<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.it.every.board.model.BoardDAO">


<!-- <select id="subj_type" resultType="subjtypeVO">
	select * form subj_type
</select> -->

	
<!-- 넌 필수로 들어가 카테고리 명 불러오기(교수는 2개만, 관리자는 몽땅)-->
<select id="selectcategory" parameterType="registerVO" resultType="categoryVO">
		select category_name from Category	
		<if test='chk_info=="professor"'>
			where category_code=4
		</if>
</select>

<select id="category" parameterType="String" resultType="int">
		select category_code from Category	
			where category_name=#{category_name}
</select>
	
	<!--너도 필수 이걸로 교수에게 등록된 모든 수업 타입을 불러오자. -->
	<select id="subjtype" parameterType="customVO" resultType="SubjTypeVO">
		select distinct type from forboard 
		<if test='usertype=="professor"'>
			where prof_name=#{profname}
		</if>
	</select>
	
	<!-- 이걸로 교수 및 해당하는 전체 수업들 출력 -->
	<select id="subjname" parameterType="customVO" resultType="customVO">
		select subj_name, open_sub_code from forboard
		where type=#{type} and dept_name=#{deptname}
	</select>
	
	<!-- 너로 교수 학과명 출력 만들고 -->
	<select id= "professordeptname" parameterType="String" resultType="DepartmentVO">
		select dept_name from department 
   			 where dept_no=(
				select dept_no from professor where prof_name=#{prof_name})
	</select> 	
	
	<!-- 관리자는 수업이 등록된 모든 학과를 볼 수 있어야 하니까 -->
	<select id="adminsubjname" resultType="DepartmentVO">
		select distinct dept_name from forboard
	</select>
	
	
	<!--(교수) 게시판 생성 검색 수업조건 -->
	<select id="proselectoption" parameterType="String" resultType="map">
		select dept_name,type,subj_name,prof_name 
			from forboard where prof_no=#{prof_no}
	</select>
	
	
	<!-- 등록 sql -->
	<insert id="insertboard" parameterType="customVO">
	
		<selectKey resultType="int" keyProperty="bdcode" order="BEFORE">
			select board_seq.nextval from dual
		</selectKey>
		insert into board(bd_code,bd_name,auth_code,usage,is_reply,is_comment,category_code,is_private,is_upload,max_upfile,max_filesize,open_sub_code ) 
			values (#{bdcode}, #{bdname}, #{authcode},#{usage}, #{isreply}, #{iscomment},#{categorycode},#{isprivate},#{isupload},#{maxupfile},#{maxfilesize},#{opensubcode})
	
	</insert>
	
	
	<!-- 로그인이 관리자일때 권한입력 차이점 주기 -->
	<select id="adminfound" parameterType="String" resultType="String">
		select auth_code from employee where emp_no=#{emp_no}
	</select>
	
	<!-- 해당 강좌명의 이미 등록된 카테고리(게시판타입의) 정보가 있다면, alert으로 취소  -->
	<select id="checkall" parameterType="customVO" resultType="int">
		select count(*) from board 
		where category_code=#{categorycode} and open_sub_code=#{opensubcode} and usage='Y'
	</select>
	
	
	<!-- 별수 없이 카테고리 코드도 넣어줘야 겠네. -->
	<select id="categorycode" parameterType="String" resultType="String">
		select category_code from category where category_name=#{category_code}
	</select>
	
	<!-- 게시판 불러오기 -->
	<select id="customlist" parameterType="customVO" resultType="customVO">
	select forbo.dept_name,boar.bd_name, forbo.type, forbo.subj_name, boar.is_private, boar.is_reply, boar.is_upload
	from forboard forbo, board boar
	where boar.open_sub_code=forbo.open_sub_code and usage='Y'
	<if test='usertype=="professor"'>
	 and prof_name=#{profname}
	</if>
	</select>
	
	<!-- 미사용(삭제)-->
	<update id="deleteboard" parameterType="String">
		update board
		set usage='N'
		where bd_name=#{bd_name}
	</update>
	
	<!-- 게시판 업데이트 -->
	<update id="updateboard" parameterType="customVO">
		update board 
		set is_reply=#{isreply}, is_private=#{isprivate}, is_comment=#{iscomment}, is_upload=#{isupload}, bd_name=#{bdname}
		where bd_name=#{forbdname}
	</update>
	
	<!-- 교수일 때 수업 불러오기용(학과 선택용) -->
	<select id="professorcalom" parameterType="String" resultType="String" >
		select distinct DEPT_NAME from forboard where prof_no=#{prof_no}
	
	</select> 
	
	<select id="checkBdCode" parameterType="String" resultType="int">
		select bd_code from board
		where open_sub_code = #{openSubCode}
	</select>

	
</mapper>
