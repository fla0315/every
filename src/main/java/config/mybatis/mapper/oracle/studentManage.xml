<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.it.every.admin.student.model.StudentManageDAO">

	<insert id="studentRegister" parameterType="studentManageVo">
		insert into student(stu_no, name, pwd, major, 
			admission_date, graduation_date, state, dept_no, phonenum)
		values(#{stuNo}, #{name}, #{pwd}, #{major}, 
			#{admissionDate}, #{graduationDate}, #{state}, #{deptNo}, #{phoneNum})
	</insert>

	<select id="selectByYear" parameterType="studentManageVo" resultType="studentManageVo">
		select * from student 
		where substr(stu_no, 1, 4)=#{admissionYear} and major=#{major}
	</select>

	<select id="selectAll" resultType="studentManageVo">
		select *
		from student s join student_state st
		on s.state = st.state
		order by s.major, s.stu_no desc
	</select>
	
	<select id="selectByStuNo" parameterType="String" resultType="studentManageVo">
		select * from student where stu_no=#{stuNo}
	</select>
	
	<update id="updateStudent" parameterType="studentManageVo">
		update student
		set name=#{name}, 
			pwd=#{pwd}, semester=#{semester}, admission_date=#{admissionDate},
			graduation_date=#{graduationDate}, credits=#{credits}, state=#{state},
			phonenum=#{phoneNum}
		where stu_no = #{stuNo}
	</update>
	
	<delete id="deleteStudent" parameterType="string">
		delete from student where stu_no=#{stuNo}
	</delete>
	
	<select id="selectBeingInSchool" resultType="studentManageVo">
		select *
		from student s join student_state st
		on s.state = st.state
		where st.state_name = '재학'
		order by s.major, s.stu_no desc
	</select>
	
	<select id="selectGrade" resultType="HashMap">
		select g.grade grade, count(g.grade) count
		from
		(select stu_no, name,
		    case when semester = '' or semester = '1' then '1학년'
		         when semester = '2' or semester = '3' then '2학년'
		         when semester = '4' or semester = '5' then '3학년'
		         when semester = '6' or semester = '7' then '4학년'
		         else '재학생아님'
		    end as grade
		from student
		where major = '경영학과' and state = 1) g
		group by g.grade
		order by g.grade
	</select>
	
	<select id="selectMajorGrade" parameterType="String" resultType="HashMap">
		select g.grade grade, count(g.grade) count
		from
		(select stu_no, name,
		    case when semester = '' or semester = '1' then '1학년'
		         when semester = '2' or semester = '3' then '2학년'
		         when semester = '4' or semester = '5' then '3학년'
		         when semester = '6' or semester = '7' then '4학년'
		         else '재학생아님'
		    end as grade
		from student
		where major = #{major} and state = 1) g
		group by g.grade
		order by g.grade
	</select>
	
	<select id="selectSubjectScore" parameterType="String" resultType="HashMap">
		select st.name name, s.subj_name subject, e.total_grade score,
		<![CDATA[
		case when e.total_grade >= 95 then 'A+'
		     when e.total_grade >= 90 then 'A'
		     when e.total_grade >= 85 then 'B+'
		     when e.total_grade >= 80 then 'B'
		     when e.total_grade >= 75 then 'C+'
		     when e.total_grade >= 70 then 'C'
		     when e.total_grade >= 65 then 'D+'
		     when e.total_grade >= 60 then 'D'
		     when e.total_grade < 60 then 'F'
		     else '재학생아님'
		end as grade
		]]>
		from evaluation e join open_subj o
		on e.sub_code = o.open_sub_code
		join subject s
		on o.subj_code = s.subj_code
		join student st
		on e.stu_no = st.stu_no
		where st.stu_no = #{stuNo}
	</select>
	
	<select id="selectSubjectAvg" parameterType="String" resultType="HashMap">
		select E.name name, avg(E.grade) avgScore
		from
		(select st.name name, s.subj_name subject, e.total_grade grade
		from evaluation e join open_subj o
		on e.sub_code = o.open_sub_code
		join subject s
		on o.subj_code = s.subj_code
		join student st
		on e.stu_no = st.stu_no
		where st.stu_no = #{stuNo}) E
		group by E.name
	</select>
	
	<select id="selectDeptAvg" parameterType="int" resultType="HashMap">
		select E.dept dept, avg(E.grade) avgScore 
		from
		(select d.dept_name dept, st.name name, s.subj_name subject, e.total_grade grade
		from evaluation e join open_subj o
		on e.sub_code = o.open_sub_code
		join subject s
		on o.subj_code = s.subj_code
		join student st
		on e.stu_no = st.stu_no
		join department d
		on st.dept_no = d.dept_no
		where d.dept_no=#{deptNo}) E
		group by E.dept
	</select>
	
	<select id="selectTotalAvg" resultType="HashMap">
		select round(avg(E.grade),2) totalAvg
		from
		(select st.name name, s.subj_name subject, e.total_grade grade
		from evaluation e join open_subj o
		on e.sub_code = o.open_sub_code
		join subject s
		on o.subj_code = s.subj_code
		join student st
		on e.stu_no = st.stu_no) E
	</select>
	
</mapper>









